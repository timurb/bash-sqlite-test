#!/bin/bash
#   Bash is required as the ${!var} is used here
#   All other constructs should play with /bin/sh also

DB="${DB:-responses.db}"

usage() {
  cat >&2 << EOF
Usage: $(basename $0) FORMATTER

Pipe the lines in the format "CODE SIZE" to STDIN.

  FORMATTER is a program that accepts CODE and VALUE as its params
            and produces some output
EOF
  exit 1
}

error() {
  echo "ERROR: $*" >&2
  exit 1
}

which sqlite3 > /dev/null || error "Cannot find 'sqlite3' executable"

[ -z "$1" ] && usage
FORMATTER="$1"

sqlite3 "${DB}" "CREATE TABLE IF NOT EXISTS timings (code TEXT, value INTEGER)"

CODES="$( sqlite3 "${DB}" "SELECT code FROM timings GROUP BY code;" )"
for CODE in ${CODES}; do
  export "code${CODE}=$( sqlite3 "${DB}" "SELECT COUNT(*) FROM timings WHERE code = ${CODE}" )"
done

while read CODE SIZE; do
  CODENAME="$(echo "code${CODE}" )"
  COUNT=$(( ${!CODENAME} + 1 ))
  export "${CODENAME}=${COUNT}"

  MIDDLE=$(( ${COUNT} / 2 ))
  sqlite3 "${DB}" "INSERT INTO timings (code, value) values ('${CODE}','${SIZE}')"
  MEDIAN="$( sqlite3 "${DB}" "SELECT value FROM timings WHERE code = ${CODE} ORDER BY value ASC LIMIT ${MIDDLE},1" )"
  $FORMATTER "${CODE}" "${MEDIAN}"
done
